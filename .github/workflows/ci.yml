name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # This allows all matrix jobs to complete even if one fails
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .
        python -m pip install .[dev]
        
    - name: Check formatting with black
      id: black
      run: black --check src tests
      continue-on-error: true
        
    - name: Check imports with isort
      id: isort
      run: isort --check --profile=black --float-to-top src tests
      continue-on-error: true
        
    - name: Check for errors with pylint
      id: pylint
      run: pylint -E ./src ./tests
      continue-on-error: true
        
    - name: Run tests
      id: pytest
      run: pytest tests
      continue-on-error: true
        
    - name: Check type hints with mypy
      id: mypy
      run: mypy --strict src tests
      continue-on-error: true
      
    - name: Summarize results
      if: always()
      run: |
        echo "CI checks completed. Review logs for any errors or warnings."
        
        # Check each step's status and report
        FAILED=false
        
        if [[ "${{ steps.black.outcome }}" == "failure" ]]; then
          echo "❌ Black formatting check failed"
          FAILED=true
        else
          echo "✅ Black formatting check passed"
        fi
        
        if [[ "${{ steps.isort.outcome }}" == "failure" ]]; then
          echo "❌ isort import check failed"
          FAILED=true
        else
          echo "✅ isort import check passed"
        fi
        
        if [[ "${{ steps.pylint.outcome }}" == "failure" ]]; then
          echo "❌ pylint error check failed"
          FAILED=true
        else
          echo "✅ pylint error check passed"
        fi
        
        if [[ "${{ steps.pytest.outcome }}" == "failure" ]]; then
          echo "❌ pytest tests failed"
          FAILED=true
        else
          echo "✅ pytest tests passed"
        fi
        
        if [[ "${{ steps.mypy.outcome }}" == "failure" ]]; then
          echo "❌ mypy type checking failed"
          FAILED=true
        else
          echo "✅ mypy type checking passed"
        fi
        
        # Exit with error if any check failed
        if [[ "$FAILED" == "true" ]]; then
          echo "Some checks have failed. Please fix the issues."
          exit 1
        fi
